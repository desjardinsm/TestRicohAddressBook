version: '{build}'
skip_non_tags: true
install:
- ps: Install-Module psake, Pester
build: off
test_script:
- ps: |-
    Invoke-psake ./psakefile.ps1 test -parameters @{ CodeCoverage = $true }

    if ($LASTEXITCODE -gt 0) {
      throw 'Tests failed'
    }
after_test:
  - ps: 'Write-Host "after_test: https://ci.appveyor.com/api/testresults/xunit/$($env:APPVEYOR_JOB_ID)"'
artifacts:
- path: Module
  name: $(APPVEYOR_PROJECT_NAME)
deploy:
- provider: GitHub
  tag: $(APPVEYOR_REPO_TAG_NAME)
  description: $(APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED)
  auth_token:
    secure: +PxazkcvZpF9LLVySBX9zHY5O8hIWpW0+6AGd7j3uX747Sl8hyIqHMgpBiAC4WpYa8hjCJI6KTzYdDD+G7iczS7UGspTj+UzK9708fNYLcET3pe/bvndYzg4UKbW9k4L
  artifact: $(APPVEYOR_PROJECT_NAME)
  draft: false
  on:
    APPVEYOR_REPO_TAG: true
on_finish:
    # Upload test results on build finish (after_test will not run on a failed build)
  - ps: |-
      $client = [System.Net.WebClient]::new()
      $client.UploadFile("https://ci.appveyor.com/api/testresults/xunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path './testResults.xml'))
