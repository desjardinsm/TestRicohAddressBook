version: '{build}'
skip_non_tags: true
init:
  - ps: |-
      if ($env:APPVEYOR_REPO_TAG) {
        $env:IS_PRERELEASE = $env:APPVEYOR_REPO_TAG_NAME -like '*-pre.*'
        Write-Host "IS_PRERELEASE:" $env:IS_PRERELEASE
      }

      $env:RELEASE_DESCRIPTION = if ($null -eq $env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED) {
        "Release $env:APPVEYOR_REPO_TAG_NAME"
      } else {
        $env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED
      }
install:
  - ps: Install-Module psake, Pester
build: off
test_script:
  - ps: |-
      Invoke-psake ./psakefile.ps1 test

      if ($LASTEXITCODE -gt 0) {
        throw 'Tests failed'
      }
artifacts:
  - path: Module
    name: $(APPVEYOR_PROJECT_NAME)
before_deploy:
  - ps: Write-Host $env:IS_PRERELEASE
deploy:
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: $(RELEASE_DESCRIPTION)
    auth_token:
      secure: +PxazkcvZpF9LLVySBX9zHY5O8hIWpW0+6AGd7j3uX747Sl8hyIqHMgpBiAC4WpYa8hjCJI6KTzYdDD+G7iczS7UGspTj+UzK9708fNYLcET3pe/bvndYzg4UKbW9k4L
    artifact: $(APPVEYOR_PROJECT_NAME)
    prerelease: $(IS_PRERELEASE)
    on:
      APPVEYOR_REPO_TAG: true
on_finish:
    # Upload test results on build finish (after_test will not run on a failed build)
  - ps: |-
      # Upload test results to AppVeyor
      $client = [System.Net.WebClient]::new()
      $results = Resolve-Path (Join-Path 'TestResults' 'testResults.xml')
      $client.UploadFile("$env:APPVEYOR_URL/api/testresults/nunit3/$env:APPVEYOR_JOB_ID", $results)
